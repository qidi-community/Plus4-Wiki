[mcu scanner]
serial: /dev/serial/by-id/[your carto here]
#    copy the result of ls /dev/serial/by-id/* above
#    example serial: /dev/serial/by-id/usb-Cartographer_614e_2A001A000443565633393720-if00

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0   # Adjust this value based on your mount (0 for Stew's mount)                       
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: -18.8  # Adjust this value based on your mount (-18 for Stew's mount)                      
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105


#These values work for Spooknik's side mount
[z_tilt]
z_positions:
    -17.5,152.5
    335.7,152.5

points:
    50,171.3 # Assumes using stew675 beacon mount's offsets
    255,171.3 # Assumes using stew675 beacon mount's offsets

speed: 125 # you may want to adjust this speed if it is resonant on your printer (keep <200)
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.01

#These values work for Spooknik's side mount.
[bed_mesh]
zero_reference_position: 152.5, 152.5  
speed: 125 # you may want to adjust this speed if it is resonant on your printer (keep <200)
horizontal_move_z: 5
mesh_min: 22, 22
mesh_max: 285, 285
probe_count: 25, 25
algorithm: bicubic
bicubic_tension: 0.3
mesh_pps: 2,2
fade_start: 2
fade_end: 10
fade_target: 0
split_delta_z: 0.01
move_check_distance: 4